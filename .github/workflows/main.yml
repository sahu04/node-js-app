name: Build Docker Image
on:
  push:
    branches:
      - 'master'
      - 'prod'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  ECR_REPOSITORY_DEV: ${{ secrets.ECR_REPOSITORY_DEV }}
  ECR_REPOSITORY_PROD: ${{ secrets.ECR_REPOSITORY_PROD }}
# S3_BUCKET_NAME_DEV: ${{ secrets.S3_BUCKET_NAME_DEV }}
# S3_BUCKET_NAME_PROD: ${{ secrets.S3_BUCKET_NAME_PROD }}
# CDN_DISTRIBUTION_ID_DEV: ${{ secrets.CDN_DISTRIBUTION_ID_DEV }}
# CDN_DISTRIBUTION_ID_PROD: ${{ secrets.CDN_DISTRIBUTION_ID_PROD }}

jobs:
  conditional_step:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ap-south-1
    - name: Check for Dockerfile or package.json changes
      id: check_file_changed
      run: |
        # Diff HEAD with the previous commit
        diff=$(git diff --name-only HEAD^ HEAD)
        
        # Check if Dockerfile or package.json has changed (added, modified, deleted)
        if echo "$diff" | grep -qE '^(Dockerfile|package\.json)$'; then
          echo "docker_package_changed=true" >> $GITHUB_OUTPUT
        else
          echo "docker_package_changed=false" >> $GITHUB_OUTPUT
        fi
   
    - name: Build Docker Image Conditionaly
      if: (github.event_name == 'push' && github.ref == 'refs/heads/prod') || (github.event_name == 'push' && github.ref == 'refs/heads/master' && steps.check_file_changed.outputs.docker_package_changed == 'true')
      #if: steps.check_file_changed.outputs.docker_package_changed == 'true'
      env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DEV_IMAGE_TAG: dev
      run: |
        # docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION  }}.amazonaws.com/flask-app:dev ${{ steps.increment_dev_tag.outputs.dev_tag }} .
        docker build -t  $ECR_REGISTRY/$ECR_REPOSITORY_DEV:$DEV_IMAGE_TAG ${{ steps.increment_dev_tag.outputs.dev_tag }} . 
        aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION  }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/flask-app:dev ${{ steps.increment_dev_tag.outputs.dev_tag }}
    # - name: Pull Docker Image Conditionaly
    #   if: steps.check_file_changed.outputs.docker_package_changed == 'true'
    #   env: 
    #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #         IMAGE_TAG: prod
    #         DEV_IMAGE_TAG: dev
    #   run: |
    #    docker pull $ECR_REGISTRY/$ECR_REPOSITORY_DEV:$DEV_IMAGE_TAG
    #    docker tag $ECR_REGISTRY/$ECR_REPOSITORY_DEV:$DEV_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY_PROD:$IMAGE_TAG
    #    docker push $ECR_REGISTRY/$ECR_REPOSITORY_PROD:$IMAGE_TAG
    
    - name: Deploy build to S3
      run: |
          npm run deploy-dev
          aws s3 sync --delete build s3://s3-bucket-github --acl public-read
          # aws cloudfront create-invalidation --distribution-id=${{ secrets.CDN_DISTRIBUTION_ID_DEV }} --paths "/*"
